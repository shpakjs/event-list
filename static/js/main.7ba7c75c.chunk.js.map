{"version":3,"sources":["components/Photos/Photos.jsx","components/EventControls/EventControls.jsx","components/EventCard/EventCard.jsx","components/Filters/Filters.jsx","components/EventsList/EventsList.jsx","App.js","serviceWorker.js","index.js"],"names":["EventInfo","props","useState","isModalOpened","setModalOpened","className","onClick","photos","map","src","key","Date","alt","EventControls","count","setCount","disabled","price","EventCard","isCollapsed","setExtended","popular","name","description","length","slice","dates","join","category","images","Filters","popularity","setPopularity","setCategory","ascedingPrice","setAscedingPrice","categories","Set","events","event","flat","useEffect","changeFilters","type","id","checked","onChange","e","target","htmlFor","value","Array","from","i","EventsList","Object","values","setEvents","eventsShowed","setEventsShowed","sortedArr","filter","includes","sort","eventA","eventB","appData","require","App","activities","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6yHAwBeA,MAlBf,SAAmBC,GAAQ,IAAD,EACgBC,oBAAS,GADzB,mBACjBC,EADiB,KACFC,EADE,KAGtB,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAS,wBAAmBF,EAAgB,SAAU,KACvD,yBAAKE,UAAU,SACX,uBAAGA,UAAU,uBAAuBC,QAAS,kBAAMF,GAAe,KAAlE,SACA,kBAAC,WAAD,KACMD,GAAiBF,EAAMM,OAAOC,KAAI,SAAAC,GAAG,OAAI,yBAAKC,IAAK,IAAIC,MAAQ,yBAAKF,IAAKA,WAIvF,yBAAKJ,UAAU,QAAQI,IAAKR,EAAMM,OAAO,GAAIK,IAAI,WAAWN,QAAS,kBAAMF,GAAe,Q,YCDvFS,MAff,SAAuBZ,GAAQ,IAAD,EACJC,mBAAS,GADL,mBACvBY,EADuB,KAChBC,EADgB,KAE5B,OACE,yBAAKV,UAAU,YACX,uCACA,yBAAKA,UAAU,SACb,4BAAQC,QAAS,kBAAMS,EAASD,EAAM,IAAIE,SAAoB,IAAVF,GAApD,OACCA,EACD,4BAAQR,QAAS,kBAAMS,EAASD,EAAM,KAAtC,QAEF,uCAAcA,EAAQb,EAAMgB,MAA5B,QCoBOC,MA5Bf,SAAmBjB,GAAQ,IAAD,EACWC,oBAAS,GADpB,mBACjBiB,EADiB,KACJC,EADI,KAGtB,OACI,yBAAKf,UAAU,SACX,kBAAC,EAAD,CAAeY,MAAOhB,EAAMgB,QAC5B,yBAAKZ,UAAU,QACTJ,EAAMoB,SAAW,yBAAKhB,UAAU,WAAf,WACnB,4BAAMJ,EAAMqB,MACZ,6BACI,uBAAGjB,UAAU,wBAAb,mBACEJ,EAAMgB,OAEZ,yBAAKZ,UAAU,eAAgBc,GAAelB,EAAMsB,YAAYC,OAAS,IAClE,oCAAGvB,EAAMsB,YAAYE,MAAM,EAAE,KAAK,yBAAKnB,QAAS,kBAAMc,GAAaD,IAAcd,UAAU,cAAzD,eACnCJ,EAAMsB,aAEZ,yBAAKlB,UAAU,yBACX,uBAAGA,UAAU,wBAAb,SACEJ,EAAMyB,MAAMC,KAAK,MAEvB,yBAAKtB,UAAU,yBAA0BJ,EAAM2B,SAASD,KAAK,KAA7D,MAEJ,kBAAC,EAAD,CAAQpB,OAAQN,EAAM4B,W,MCWnBC,MApCf,SAAiB7B,GAAQ,IAAD,EACgBC,oBAAS,GADzB,mBACb6B,EADa,KACDC,EADC,OAEY9B,mBAAS,IAFrB,mBAEb0B,EAFa,KAEHK,EAFG,OAGsB/B,mBAAS,QAH/B,mBAGbgC,EAHa,KAGEC,EAHF,KAIdC,EAAa,IAAIC,IAAIpC,EAAMqC,OAAO9B,KAAI,SAAA+B,GAAK,OAAIA,EAAMX,YAAUY,QAMrE,OAJAC,qBAAU,WACNxC,EAAMyC,cAAc,CAACX,aAAYH,WAAUM,oBAC5C,CAACH,EAAYH,EAAUM,IAGtB,yBAAK7B,UAAU,WACX,yBAAKA,UAAU,UACX,2BAAOsC,KAAK,WAAWC,GAAG,UAAUC,QAASd,EAAYe,SAAU,SAACC,GAAD,OAAOf,EAAce,EAAEC,OAAOH,YACjG,2BAAOI,QAAQ,WAAf,iBAEJ,yBAAK5C,UAAU,UACf,2CACI,4BAAQ6C,MAAOtB,EAAUkB,SAAU,SAACC,GAAD,OAAMd,EAAYc,EAAEC,OAAOE,SAC1D,4BAAQA,MAAM,KAEVC,MAAMC,KAAKhB,GAAY5B,KAAI,SAACoB,EAAUyB,GAAX,OAAiB,4BAAQ3C,IAAK2C,EAAGH,MAAOtB,GAAWA,QAI1F,yBAAKvB,UAAU,UACX,wCACA,4BAAQ6C,MAAOhB,EAAeY,SAAU,SAACC,GAAD,OAAMZ,EAAiBY,EAAEC,OAAOE,SACpE,4BAAQA,MAAM,QAAd,yBACA,4BAAQA,MAAM,SAAd,0B,MCQLI,MAlCf,SAAoBrD,GAAQ,IAAD,EACKC,mBAASqD,OAAOC,OAAOvD,EAAMqC,SADlC,mBAChBA,EADgB,KACRmB,EADQ,OAEiBvD,mBAAS,GAF1B,mBAEhBwD,EAFgB,KAEFC,EAFE,KAoBvB,OACI,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CAASqC,cAlBK,SAAC,GAAyD,IAAxDd,EAAuD,EAAvDA,SAAUG,EAA6C,EAA7CA,WAAYG,EAAiC,EAAjCA,cAUtC0B,GAVuE,EAAlBF,aACvCH,OAAOC,OAAOvD,EAAMqC,QACjCuB,QAAQ,SAAAtB,GACL,OAAGX,EACQG,EACDQ,EAAMlB,SAAWkB,EAAMX,SAASkC,SAASlC,GACzCW,EAAMX,SAASkC,SAASlC,GAE3BG,EAAaQ,EAAMlB,QAAUkB,KAEhBwB,MAAK,SAACC,EAAQC,GACtC,MAAyB,SAAlB/B,EAA2B8B,EAAO/C,MAAQgD,EAAOhD,MAASgD,EAAOhD,MAAQ+C,EAAO/C,UAG3FwC,EAAUG,IAIiCtB,OAAUiB,OAAOC,OAAOvD,EAAMqC,UAEjEA,EAAOb,MAAM,EAAGiC,GAAclD,KAAK,SAAA+B,GAC/B,OAAO,kBAAC,EAAD,eAAO7B,IAAK6B,EAAMK,IAAQL,OAGzC,wCAAcmB,EAAepB,EAAOd,OAASc,EAAOd,OAASkC,EAA7D,OAAgFpB,EAAOd,OAAvF,eACEkC,EAAepB,EAAOd,QAAU,4BAAQnB,UAAU,OAAOC,QAAS,kBAAMqD,EAAgBD,EAAe,KAAvE,eC/BxCQ,G,MAAUC,EAAQ,KAUTC,MARf,WACE,OACE,yBAAK/D,UAAU,OACb,kBAAC,EAAD,CAAYiC,OAAS4B,EAAQG,eCGfC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7ba7c75c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nimport './Photos.scss';\n\nfunction EventInfo(props) {\n    let [isModalOpened, setModalOpened] = useState(false);\n\n    return (\n        <div className=\"photo\" >\n            <div className={`modal-wrapper ${isModalOpened ? 'opened': ''}`}>\n                <div className=\"modal\" >\n                    <i className=\"material-icons md-36\" onClick={() => setModalOpened(false)} >close</i>\n                    <Carousel>\n                        { isModalOpened && props.photos.map(src => <div key={new Date()}><img src={src}/></div>)}\n                    </Carousel>\n                </div>\n            </div>\n            <img className=\"cover\" src={props.photos[0]} alt=\"activity\" onClick={() => setModalOpened(true)}/>\n        </div>\n  );\n}\n\nexport default EventInfo;\n","import React, { useState } from 'react';\nimport './EventControls.scss';\n\nfunction EventControls(props) {\n  let [count, setCount] = useState(0);\n  return (\n    <div className=\"controls\">\n        <h4>TICKETS</h4>\n        <div className=\"count\">\n          <button onClick={() => setCount(count-1)} disabled={count === 0}> - </button>\n          {count}\n          <button onClick={() => setCount(count+1)} > + </button>\n        </div>\n        <div>TOTAL: { count * props.price} $</div>\n    </div>\n  );\n}\n\nexport default EventControls;\n","import React, { useState } from 'react';\nimport Photos from '../Photos/Photos';\nimport './EventCard.scss';\nimport EventControls from '../EventControls/EventControls';\n\nfunction EventCard(props) {\n    let [isCollapsed, setExtended] = useState(true);\n\n    return (\n        <div className=\"event\">\n            <EventControls price={props.price}/>\n            <div className=\"info\">\n                { props.popular && <div className=\"popular\">popular</div> }\n                <h4>{ props.name }</h4>\n                <div>\n                    <i className=\"material-icons md-18\">monetization_on</i>\n                    { props.price }\n                </div>\n                <div className=\"description\">{ isCollapsed && props.description.length > 200\n                    ?  <>{props.description.slice(0,200)}<div onClick={() => setExtended(!isCollapsed)} className=\"small_text\">+read more</div></>\n                    : props.description}\n                </div>\n                <div className=\"small_text additional\">\n                    <i className=\"material-icons md-18\">event</i>\n                    { props.dates.join('-') }\n                </div>\n                <div className=\"small_text additional\">{ props.category.join(',') } </div>\n            </div>\n            <Photos photos={props.images}/>\n        </div>\n  );\n}\n\nexport default EventCard;\n","import React, { useState, useEffect } from 'react';\nimport './Filters.scss';\n\nfunction Filters(props) {\n    const [popularity, setPopularity] = useState(false);\n    const [category, setCategory] = useState(\"\");\n    const [ascedingPrice, setAscedingPrice] = useState(\"true\");\n    const categories = new Set(props.events.map(event => event.category).flat());\n    \n    useEffect(() => {\n        props.changeFilters({popularity, category, ascedingPrice});\n    }, [popularity, category, ascedingPrice]);\n\n    return (\n        <div className=\"filters\">\n            <div className=\"filter\">\n                <input type=\"checkbox\" id=\"popular\" checked={popularity} onChange={(e) => setPopularity(e.target.checked)} />\n                <label htmlFor=\"popular\" >show popular</label>\n            </div>\n            <div className=\"filter\">\n            <label>Category</label>\n                <select value={category} onChange={(e)=> setCategory(e.target.value)} >\n                    <option value=\"\"></option>\n                    { \n                        Array.from(categories).map((category, i) => <option key={i} value={category}>{category}</option>)\n                    }\n                </select>\n            </div>\n            <div className=\"filter\">\n                <label>Price</label>\n                <select value={ascedingPrice} onChange={(e)=> setAscedingPrice(e.target.value)} >\n                    <option value=\"true\">Cheapest to expensive</option>\n                    <option value=\"false\">Expensive to cheap</option>\n                </select>\n            </div>\n        </div>\n    );\n}\n\nexport default Filters;\n","import React, { useState } from 'react';\nimport Event from '../EventCard/EventCard';\nimport Filters from '../Filters/Filters';\n\nimport './EventsList.scss';\n\nfunction EventsList(props) {\n    const [events, setEvents] = useState(Object.values(props.events));\n    const [eventsShowed, setEventsShowed] = useState(2);\n\n    const changeFilters = ({category, popularity, ascedingPrice, eventsShowed}) => {\n        let filteredArr = Object.values(props.events)\n            .filter( event => {\n                if(category){\n                    return popularity \n                        ? event.popular && event.category.includes(category)\n                        : event.category.includes(category);\n                }\n                return popularity ? event.popular : event;\n            });\n        let sortedArr = filteredArr.sort((eventA, eventB) => {\n            return ascedingPrice === \"true\" ? eventA.price - eventB.price :  eventB.price - eventA.price;\n        });\n\n        setEvents(sortedArr);\n    }\n    return (\n        <div className=\"events_list\">\n            <Filters changeFilters={changeFilters} events = {Object.values(props.events)}/>\n            {\n                events.slice(0, eventsShowed).map( event => {\n                    return <Event key={event.id} {...event} />\n                })\n            }\n            <span>Showed {eventsShowed > events.length ? events.length : eventsShowed} of { events.length } activities</span>\n            { eventsShowed < events.length && <button className=\"more\" onClick={() => setEventsShowed(eventsShowed + 1)}>Show more</button> }\n        </div>\n    );\n}\n\nexport default EventsList;\n","import React from 'react';\nimport EventsList from './components/EventsList/EventsList';\nimport './App.scss';\n\nconst appData = require('./dataset.json');\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EventsList events={ appData.activities }/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}